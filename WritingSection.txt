**Q1.** You are working on a project and have some changes. How do you bring your uncommitted changes to a new branch?

The command you should run is: git checkout -b new-branch-name
Q2. When remote repository has some changes that your local machine doesn’t have, the command to apply the remote changes to your local repository you should run is: git pull

Q3. In git VCS, the code can be in three “areas”: working directory, __staging area__, and git directory. (This is the area the file changes would be in after you run the command git add <file-name>.)

Q4 : What was the intent of the authors ? (DOK level 3)
You are given the following sequence of Git commands. Your task is to write what the author intended to achieve with each command or set of commands. Fill in the blanks with what those set of commands achieve. Limit your response to the space provided.
git pull origin main
git checkout -b bugfix/missing-button
intent: git pull origin main - updates local main branch by fetching and merging latest changes from remote main branch.
intent: git checkout -b bugfix/missing-button- creates a new branch named bugfix/missing-button ad switches to it from main branch

git add button.js: stages changes to button.js file before commit
git commit -m "Fix missing submit button on login page": Records/commits the staged changes into the repository history with the message “Fix missing submit button on login page”.

git checkout main : Switches back to the main branch.
git pull origin main :Updates the local main branch with the latest changes from the remote main.
git merge bugfix/missing-button --no-ff : Merges the bugfix/missing-button branch into main using a no fast-forward merge, ensuring a dedicated merge commit is created to keep the branch history clear.

git push origin main: Uploads your local main branch (including the recent merge commit) to the remote repository named origin, so others can access the updated code.

